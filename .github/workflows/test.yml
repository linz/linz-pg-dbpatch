name: Test

on:
  pull_request:
    branches-ignore:
      - packagecloud
      - 'release-*'
  push:
    branches:
      - master
      - packagecloud
      - 'release-*'
  schedule:
    - cron: '0 12 * * 0'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0

      - name: Install Nix
        uses: cachix/install-nix-action@v16

      - name: Run pre-commit hooks
        run: nix-shell --pure --run 'pre-commit run --all-files'

  test:
    name: Test PostgreSQL ${{ matrix.pg }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        pg: ['10', '11', '12', '13', '14']
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-latest]
    env:
      # Set PATH as postgresql-server-dev-all pretends version is 11
      PATH: /usr/lib/postgresql/${{ matrix.pg }}/bin:/bin:/usr/bin:/usr/local/bin
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get --assume-yes --purge remove \
              libpq5 \
              libpq-dev \
              php*fpm \
              postgresql \
              postgresql-client-common \
              postgresql-common
          sudo rm --force --recursive /var/lib/postgresql
          sudo apt-get install curl ca-certificates gnupg
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release --codename --short)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
          sudo apt-get update
          sudo apt-get install --assume-yes \
              debhelper \
              fakeroot \
              libtap-parser-sourcehandler-pgtap-perl \
              postgresql-client-${{ matrix.pg }} \
              postgresql-${{ matrix.pg }} \
              postgresql-${{ matrix.pg }}-pgtap \
              postgresql-server-dev-all \
              postgresql-server-dev-${{ matrix.pg }}

      - name: Setup PostgreSQL user
        run: |
          whoami
          sudo --user=postgres createuser --superuser "$USER"
          sudo --user=postgres createuser --superuser root

      - name: Build
        run: make

      - name: Test build
        run: make check

      - name: Install
        run: sudo env "PATH=$PATH" make install

      - name: Test installation
        run: |
          # Post-install tests
          make installcheck || { cat regression.diffs; false; }
          make installcheck-loader || { cat regression.diffs; false; }
          make installcheck-loader-noext || { cat regression.diffs; false; }

      - name: Test upgrades from all tagged versions
        run: sudo env "PATH=$PATH" test/ci/test_all_upgrades.bash

      - name: Test packaging
        run: |
          # Build the packages
          PG_SUPPORTED_VERSIONS=${{ matrix.pg }} make deb
          # Uninstall directly installed files
          sudo make uninstall
          # Install postgresql-agnostic dbpatch package
          sudo dpkg --install ../dbpatch_*.deb
          dpkg -L dbpatch
          # Run post-install postgresql-agnostic tests
          make installcheck-loader-noext || { cat regression.diffs; false; }
          # Install postgresql-specific dbpatch package
          sudo dpkg --install ../postgresql-${{ matrix.pg }}-dbpatch_*.deb
          # Run post-install extension based checks
          make installcheck || { cat regression.diffs; false; }
          make installcheck-loader || { cat regression.diffs; false; }
          # Test building pacakges for all supported versions
          make deb
          make deb-check

  package:
    needs:
      - lint
      - test
    name: Package for Debian
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        release:
          - bionic
          - focal
      max-parallel: 1

    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Determine packagecloud publication target
        run: |
          # TODO: it would be nice to turn this into a single-liner in
          #       github-action syntax
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub event_name: ${{ github.event_name }}"
          REPO=
          if test "${{ github.event_name }}" = 'push'; then
            if expr "${{ github.ref }}" : "refs/tags/" > /dev/null; then
              REPO=test
              git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
            elif test "${{ github.ref }}" = 'refs/heads/packagecloud' \
                   -o "${{ github.ref }}" = 'refs/heads/master'
            then
              REPO=dev
            fi
          fi
          echo "REPO=$REPO" | tee --append $GITHUB_ENV

      - name: Build and upload to packagecloud
        uses: linz/linz-software-repository@v8
        with:
          release: ${{ matrix.release }}
          packagecloud_token: ${{ secrets.LINZCI_PACKAGECLOUD_TOKEN }}
          packagecloud_repository: ${{ env.REPO }}
