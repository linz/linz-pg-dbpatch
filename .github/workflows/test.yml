name: test

on: [pull_request]

jobs:

  test:

    name: Test PostgreSQL ${{ matrix.pg }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            pg: [ '9.3', '9.4', '9.5', '9.6', '10', '11' ]
            os: [ ubuntu-18.04 ]
    env:
      # Set PATH as postgresql-server-dev-all pretends version is 11
      PATH: /usr/lib/postgresql/${{ matrix.pg }}/bin:/bin:/usr/bin:/usr/local/bin
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        sudo apt-get -qqy --purge remove \
            libpq5 \
            libpq-dev \
            php*fpm \
            postgresql \
            postgresql-client-common \
            postgresql-common
        sudo rm -rf /var/lib/postgresql
        sudo apt-get install curl ca-certificates gnupg
        curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
        sudo apt-get update -qq
        sudo apt-get install -qqy \
            debhelper \
            fakeroot \
            libtap-parser-sourcehandler-pgtap-perl \
            postgresql-client-${{ matrix.pg }} \
            postgresql-${{ matrix.pg }} \
            postgresql-${{ matrix.pg }}-pgtap \
            postgresql-server-dev-all \
            postgresql-server-dev-${{ matrix.pg }}
    - name: Setup PostgreSQL user
      run: |
        whoami
        sudo -u postgres createuser -s "$USER"
        sudo -u postgres createuser -s root
    - name: Build
      run: |
        # Build
        make
    - name: Test build
      run: |
        # Pre-install tests
        make check
    - name: Install
      run: |
        sudo env "PATH=$PATH" make install
    - name: Test installation
      run: |
        # Post-install tests
        make installcheck || { cat regression.diffs; false; }
        make installcheck-loader || { cat regression.diffs; false; }
        make installcheck-loader-noext || { cat regression.diffs; false; }
    - name: Test upgrades
      run: |
        # Test upgrades from all tagged versions
        sudo env "PATH=$PATH" test/ci/test_all_upgrades.sh
    - name: Test packaging
      run: |
        # Test install from package
        PG_SUPPORTED_VERSIONS=${{ matrix.pg }} make deb
        sudo dpkg -i ../postgresql-${{ matrix.pg }}-dbpatch_*.deb
        sudo dpkg -i ../dbpatch_*.deb
